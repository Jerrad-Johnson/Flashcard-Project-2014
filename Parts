To Do:
CSS Overlay







// Test the passwords
if ($whatever2 == $whatever5) {
	echo "True.";
} else {
	echo "False.";
}
// End

if (password_verify($password, $whatever5)) { 
	echo "True2"; 
} else { 
	echo "False 2"; 
}


----------------------------------------------------------------------------
JS Email Regex:
----------------------------------------------------------------------------

/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i 






----------------------------------------------------------------------------
CURL - send a string (Purpose: POSTing IP address on account creation.)
----------------------------------------------------------------------------

$ipCreation = $_SERVER['REMOTE_ADDR'];

$ipCreationCurl = curl_init(); // initiate curl
$url = "accountcreation.php"; // where you want to post data
curl_setopt($ipCreationCurl, CURLOPT_URL,$url);
curl_setopt($ipCreationCurl, CURLOPT_POST, true);  // tell curl you want to post something
curl_setopt($ipCreationCurl, CURLOPT_POSTFIELDS, $ipCreation); // define what you  want to post
curl_setopt($ipCreationCurl, CURLOPT_RETURNTRANSFER, true); // return the output in string format
$output = curl_exec ($ipCreationCurl); // execute

curl_close ($ipCreationCurl); // close curl handle

var_dump($output); // show output






----------------------------------------------------------------------------
PHP Password hash, salt, store and check.
----------------------------------------------------------------------------


//Connect to SQL
$con=mysqli_connect("localhost","memory",
	"V0kQMRwf2mTx","memory");

if (mysqli_connect_errno()) {
echo "Failed to connect to MySQL: " . mysqli_connect_error();
}
// End





// I used this to create the password.
 $password="whatever";
 $whatever2 = password_hash($password, PASSWORD_BCRYPT);




#			mysqli_query($con,"INSERT INTO members (usr, pass)
#			VALUES ('admin', '$whatever2')");
// End


$whatever3 = mysqli_query($con, "SELECT * FROM members
	 ORDER BY usr");

while($whatever4 = mysqli_fetch_array($whatever3)) {

	$whatever5 = $whatever4['pass'];
#	echo $whatever5;
}
#var_dump($whatever2); echo "<br>"; var_dump($whatever5);


// Test the passwords
if ($whatever2 == $whatever5) {
	echo "True.";
} else {
	echo "False.";
}
// End

if (password_verify($password, $whatever5)) { echo "True2"; } else { echo "False 2"; }

mysqli_close($con);


?>



----------------------------------------------------------------------------
Regex password expression:
----------------------------------------------------------------------------
^([1-zA-Z0-1@.\s]{1,255})$


----------------------------------------------------------------------------
Regex username expression:
----------------------------------------------------------------------------
^(?=.{8,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$



----------------------------------------------------------------------------
Javascript regex password check:
----------------------------------------------------------------------------
var text = "What";

var thisRegex = new RegExp('^([1-zA-Z0-1@.\s]{4,30})$');

if(!thisRegex.test(text)){
    alert('fail');
} else {
	alert('pass');
}





----------------------------------------------------------------------------
Ajax - get data from MySQL
----------------------------------------------------------------------------
function showUser() {

	if (window.XMLHttpRequest) {
	    // code for IE7+, Firefox, Chrome, Opera, Safari
	    xmlhttp=new XMLHttpRequest();
	} else { // code for IE6, IE5
	    xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
	}
		xmlhttp.onreadystatechange=function() {
	    
	    	if (xmlhttp.readyState==4 && xmlhttp.status==200) {
	    	document.getElementById("print").innerHTML=xmlhttp.responseText;
	    	}
	  	}
  xmlhttp.open("POST","database.php",true);
  xmlhttp.send();
}




showuser();



----------------------------------------------------------------------------
Question and Answers Columns (Or Challenge / Response)
----------------------------------------------------------------------------

// Create a foreach that creates an array  which counts up from 0, for each entry - it will improve creation speed of some items.




// Question and Answer Display and div creation.

var qaRowCounter = "0";
var questionColumnCounter = "0";
var answerColumnCounter ="0";

	for (i = 0; i < 5; i++) { // Change to foreac
	
		qaRows = document.createElement('div');
		qaRows.setAttribute('id',"qaRows" + qaRowCounter);
		qaRows.setAttribute('class',"qaRowsCSS");
		document.body.appendChild(qaRows);

		qaRowCounter++;
	}
	


	for (j = 0; j < 1; j++) { // Change to foreac
	
		questionColumns = document.createElement('div');
		questionColumns.setAttribute('id',"questionColumn" /* + questionColumnCounter*/);
		questionColumns.setAttribute('class',"questionColumnCSS");
		document.getElementById('qaRows0').appendChild(questionColumns); // Change 0 to a variable

// 			questionColumnCounter++; <-- Enable this, later.
	}



	for (i = 0; i < 1; i++) { // Change to foreach
	
		answerColumns = document.createElement('div');
		answerColumns.setAttribute('id',"answersColumn" + answerColumnCounter);
		answerColumns.setAttribute('class',"answersColumnCSS");
		document.getElementById('qaRows0').appendChild(answerColumns); // Change 0 to a variable

		// answerColumnCounter++;
	}

// END


----------------------------------------------------------------------------
Audio Player 
----------------------------------------------------------------------------



<audio id="soundEffect" src="Whoosh.mp3"></audio>
<button onclick="playAudio()">Test Audio</button>
<button onclick="startLoop()">Start Audio</button>
<button onclick="stopLoop()">Stop Audio</button>




<script type="text/javascript">

        var intervalId;

        function startLoop() {
             intervalId = setInterval(playAudio, 3000);
        }

        function stopLoop() {
             clearInterval(intervalId);
        }

        function playAudio() {
            document.getElementById("soundEffect").play();

        }

</script>




----------------------------------------------------------------------------
Clock
----------------------------------------------------------------------------

					// This goes in the <head>

<script type="text/javascript">

<!--

function updateClock ( )
{
  var currentTime = new Date ( );

  var currentHours = currentTime.getHours ( );
  var currentMinutes = currentTime.getMinutes ( );
  var currentSeconds = currentTime.getSeconds ( );

  // Pad the minutes and seconds with leading zeros, if required
  currentMinutes = ( currentMinutes < 10 ? "0" : "" ) + currentMinutes;
  currentSeconds = ( currentSeconds < 10 ? "0" : "" ) + currentSeconds;

  // Choose either "AM" or "PM" as appropriate
  var timeOfDay = ( currentHours < 12 ) ? "AM" : "PM";

  // Convert the hours component to 12-hour format if needed
  currentHours = ( currentHours > 12 ) ? currentHours - 12 : currentHours;

  // Convert an hours component of "0" to "12"
  currentHours = ( currentHours == 0 ) ? 12 : currentHours;

  // Compose the string for display
  var currentTimeString = currentHours + ":" + currentMinutes + ":" + currentSeconds + " " + timeOfDay;

  // Update the time display
  document.getElementById("clock").firstChild.nodeValue = currentTimeString;
}

					// This goes in the Body

<body onload="updateClock(); setInterval('updateClock()', 1000 )">
<span id="clock">





----------------------------------------------------------------------------
Quick Challenge
----------------------------------------------------------------------------




<div id="quickchallenge" onclick="quickChallengeContinue(quickChallengeResponse)">Click me</div>

<div id="print"></div>






<script type="text/javascript">



	var quickChallengeTimer = { timer:30000 }; var quickChallengeQuestion; 
	var quickChallengeAnswer; var quickChallengeResponse = { response:true };

		function quickChallenge(quickChallengeTimerfunc, quickChallengeResponsefunc) {

			if (quickChallengeResponsefunc.response == true) {
				
				switch (quickChallengeTimerfunc.timer) {

					case 30000:
						quickChallengeTimerfunc.timer = 60000;
						quickChallengeResponsefunc.response = false;
						document.getElementById("print").innerHTML = "60";
						break;

					case 60000:
						quickChallengeTimerfunc.timer = 120000;
						quickChallengeResponsefunc.response = false;
						document.getElementById("print").innerHTML = "120";
						break;

					default:
						document.getElementById("print").innerHTML = "error";
						break;
				}
			}

			console.dir(quickChallengeTimerfunc.timer);
		}



		function quickChallengeContinue(quickChallengeResponsefunc) {

			quickChallengeResponsefunc.response = true;
			quickChallenge(quickChallengeTimer, quickChallengeResponse);
		}






		//var_dump(quickChallengeTimer);
	quickChallenge(quickChallengeTimer, quickChallengeResponse);
		//var_dump(quickChallengeTimer);







----------------------------------------------------------------------------
Count Down - Generic, change variables and etc.
----------------------------------------------------------------------------




<div id="countdown"></div>




<script type="text/javascript">
  var focusSeconds;
  var focustemp;
  
	document.getElementById("countdown").innerHTML = 2

  function countdown() {

  	
    focusSeconds = document.getElementById('countdown').innerHTML;
     
    if (focusSeconds == 1) {
      focustemp = document.getElementById('countdown');
      focustemp.innerHTML = "all done, bye bye";
      return;
    }
 
    focusSeconds--;
    focustemp = document.getElementById('countdown');
    focustemp.innerHTML = focusSeconds;
    focusTimeoutSeconds = setTimeout(countdown, 1000);
  }
 
  countdown();


</script>





















































-------
before using post:



# $passwordCreation = "ttww"; $userCreation = "yow"; $ipCreation = "";
# $emailCreation = "wdawwwd@w.www";

	class accountcreation {
		private $options;

		function __construct($passwordCreation, $userCreation, $ipCreation, $emailCreation, $con) {
			$this->passwordCreation = $passwordCreation;
			$this->userCreation = $userCreation;
			$this->ipCreation = $ipCreation;
			$this->emailCreation = $emailCreation;
			$this->con = $con;
			
		}

		function callMethods() {
			$this->emailRegex();
		}


		private function emailRegex() {
			if (preg_match('/^(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){255,})(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){65,}@)(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22))(?:\.(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\]))$/iD', 
					$this->emailCreation)) {
			$this->usernameRegex();
			} else {
			echo "Please use a valid e-mail address.";
			}
		}

		private function usernameRegex() {
			if (preg_match('^(?=.{3,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$^', $this->userCreation)) {
			$this->passwordRegex();
			} else {
			echo "Your username must be  3-20 characters long, and only
			contain A-Z, 0-9, or periods and underscores (but not two 
				periods or underscores together.)";
			}
		}

		private function passwordRegex() {
			if(preg_match('^([1-zA-Z0-1@.\s]{4,30})$^', $this->passwordCreation)) {
				$this->passwordHash();
				} else {
				echo "Your password must be 4-30 characters long, and 
					not contain: " . '‘,\*&amp;$&lt;&gt;';
				}
			}


		private function passwordHash(){
			$options = array(); $options['cost'] = 12;
			$this->passwordCreation = password_hash($this->passwordCreation, PASSWORD_BCRYPT, $options);
			var_dump($this->passwordCreation);
			$this->accountCreation();
		}

		private function accountCreation() {
			mysqli_query($this->con, "INSERT INTO members (usr, pass, email, regIP) 
			VALUES ('$this->userCreation', '$this->passwordCreation', '$this->emailCreation', '$this->ipCreation')");
		}
	}


$admin = new accountcreation($passwordCreation, $userCreation, $ipCreation, $emailCreation, $con);
$admin->callMethods();





	class account {
		private function something() {
	# 		TRYING TO PUT ARRAY HERE
		}
	}

